{"version":3,"file":"simple-react-form-hook.cjs.development.js","sources":["../src/hooks/useRegister.ts","../src/utils/validate.ts","../src/hooks/useForm.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\nconst useRegister = (\r\n  formData: any,\r\n  setFormData: React.Dispatch<React.SetStateAction<any>>\r\n) => {\r\n  const ref = useRef<HTMLFormElement>(null);\r\n\r\n  useEffect(() => {\r\n    const formInputs: any = {};\r\n\r\n    const setDefaultValues = () => {\r\n      if (ref.current && ref.current.elements) {\r\n        Array.from(ref.current.elements).forEach((el) => {\r\n          const element = el as HTMLInputElement;\r\n          if (ref.current && ref.current[element.name]) {\r\n            ref.current[element.name].value = formData[element.name];\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    const setInitialValues = () => {\r\n      if (ref.current && ref.current.elements) {\r\n        Array.from(ref.current.elements).forEach((element) => {\r\n          switch (element.nodeName) {\r\n            case \"INPUT\": {\r\n              const el = element as HTMLInputElement;\r\n              if (!formData?.[el?.name]) {\r\n                formInputs[el?.name] = undefined;\r\n              }\r\n              break;\r\n            }\r\n            case \"SELECT\": {\r\n              const el = element as HTMLSelectElement;\r\n              if (!formData?.[el?.name]) {\r\n                formInputs[el?.name] = undefined;\r\n              }\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      }\r\n      setFormData((th: any) => ({ ...th, ...formInputs }));\r\n    };\r\n\r\n    if (formData) {\r\n      setDefaultValues();\r\n    } else {\r\n      setInitialValues();\r\n    }\r\n  }, []);\r\n\r\n  return ref;\r\n};\r\n\r\nexport default useRegister;\r\n","import { FormErrors, Validations } from \"../hooks/useForm\";\r\n\r\nfunction validate<T>(\r\n  inputs: T,\r\n  validations?: Validations<T>\r\n): Promise<{ status: boolean; errors: FormErrors<T> }> {\r\n  return new Promise((res, rej) => {\r\n    let errors: FormErrors<T> = {};\r\n    if (validations) {\r\n      Object.keys(validations).forEach((validate) => {\r\n        const fieldName = validate as keyof T;\r\n        const value = inputs[fieldName];\r\n        const validationCriteria = validations[fieldName];\r\n        if (validationCriteria) {\r\n          if (validationCriteria?.required && !value) {\r\n            Object.assign(errors, {\r\n              [fieldName]: validationCriteria?.message || \"\",\r\n            });\r\n          } else if (validationCriteria?.validate) {\r\n            const isValid = validationCriteria.validate(inputs[fieldName]);\r\n            if (!isValid.requirement) {\r\n              Object.assign(errors, {\r\n                [fieldName]: isValid.message,\r\n              });\r\n            }\r\n          } else {\r\n            if (errors[fieldName]) {\r\n              delete errors[fieldName];\r\n            }\r\n          }\r\n        }\r\n      });\r\n      Object.keys(errors).length > 0\r\n        ? rej({ status: false, errors })\r\n        : res({ status: true, errors });\r\n    } else {\r\n      res({ status: true, errors });\r\n    }\r\n  });\r\n}\r\n\r\nexport default validate;\r\n","import { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport useRegister from \"./useRegister\";\r\nimport validate from \"../utils/validate\";\r\n\r\nexport type FormErrors<T> = {\r\n  [key in keyof T]?: string;\r\n};\r\n\r\ntype ValidationFunction<T> = {\r\n  required?: boolean;\r\n  message?: string;\r\n  validate?: (value: T) => {\r\n    requirement: boolean;\r\n    message: string;\r\n  };\r\n};\r\n\r\nexport type Validations<T> = {\r\n  [key in keyof T]?: ValidationFunction<T[key]>;\r\n};\r\n\r\ninterface UseFormProps<T> {\r\n  defaultValue?: T;\r\n  validations?: Validations<T>;\r\n}\r\n\r\ntype DataType = string | number | boolean | null | undefined | object;\r\n\r\nconst useForm = <T extends Record<string, DataType>>(\r\n  props?: UseFormProps<T>\r\n) => {\r\n  const [formData, setFormData] = useState<T>((props?.defaultValue as T) || {});\r\n  const [errors, setErrors] = useState<FormErrors<T>>({});\r\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\r\n\r\n  const ref = useRegister(props?.defaultValue, setFormData);\r\n\r\n  const handleValidate = (data: T, call?: CallableFunction) =>\r\n    validate<T>(data, props?.validations)\r\n      .then((res) => {\r\n        setErrors(res.errors as FormErrors<T>);\r\n        if (call) {\r\n          call();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setErrors(e.errors as FormErrors<T>);\r\n      });\r\n\r\n  const handleChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    e.persist();\r\n    const { name, value } = e.target;\r\n    const newData = { ...formData, [name]: value };\r\n    if (isSubmitted) {\r\n      handleValidate(newData);\r\n    }\r\n    setFormData(newData);\r\n  };\r\n\r\n  const handleSubmit = (\r\n    onSubmit: (data: T) => void\r\n  ): ((e: FormEvent) => void) => {\r\n    return (e) => {\r\n      e.preventDefault();\r\n      setIsSubmitted(true);\r\n      handleValidate(formData, () => {\r\n        onSubmit(formData);\r\n      });\r\n    };\r\n  };\r\n\r\n  return {\r\n    ref,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"names":["useRegister","formData","setFormData","ref","useRef","useEffect","formInputs","setDefaultValues","current","elements","Array","from","forEach","el","element","name","value","setInitialValues","nodeName","undefined","th","validate","inputs","validations","Promise","res","rej","errors","Object","keys","fieldName","validationCriteria","required","assign","message","isValid","requirement","length","status","useForm","props","useState","defaultValue","setErrors","isSubmitted","setIsSubmitted","handleValidate","data","call","then","catch","e","handleChange","persist","target","newData","handleSubmit","onSubmit","preventDefault"],"mappings":";;;;;;AAEA,MAAMA,WAAW,GAAGA,CAClBC,QAAa,EACbC,WAAsD;EAEtD,MAAMC,GAAG,GAAGC,YAAM,CAAkB,IAAI,CAAC;EAEzCC,eAAS,CAAC;IACR,MAAMC,UAAU,GAAQ,EAAE;IAE1B,MAAMC,gBAAgB,GAAGA;MACvB,IAAIJ,GAAG,CAACK,OAAO,IAAIL,GAAG,CAACK,OAAO,CAACC,QAAQ,EAAE;QACvCC,KAAK,CAACC,IAAI,CAACR,GAAG,CAACK,OAAO,CAACC,QAAQ,CAAC,CAACG,OAAO,CAAEC,EAAE;UAC1C,MAAMC,OAAO,GAAGD,EAAsB;UACtC,IAAIV,GAAG,CAACK,OAAO,IAAIL,GAAG,CAACK,OAAO,CAACM,OAAO,CAACC,IAAI,CAAC,EAAE;YAC5CZ,GAAG,CAACK,OAAO,CAACM,OAAO,CAACC,IAAI,CAAC,CAACC,KAAK,GAAGf,QAAQ,CAACa,OAAO,CAACC,IAAI,CAAC;;SAE3D,CAAC;;KAEL;IAED,MAAME,gBAAgB,GAAGA;MACvB,IAAId,GAAG,CAACK,OAAO,IAAIL,GAAG,CAACK,OAAO,CAACC,QAAQ,EAAE;QACvCC,KAAK,CAACC,IAAI,CAACR,GAAG,CAACK,OAAO,CAACC,QAAQ,CAAC,CAACG,OAAO,CAAEE,OAAO;UAC/C,QAAQA,OAAO,CAACI,QAAQ;YACtB,KAAK,OAAO;cAAE;gBACZ,MAAML,EAAE,GAAGC,OAA2B;gBACtC,IAAI,EAACb,QAAQ,YAARA,QAAQ,CAAGY,EAAE,oBAAFA,EAAE,CAAEE,IAAI,CAAC,GAAE;kBACzBT,UAAU,CAACO,EAAE,oBAAFA,EAAE,CAAEE,IAAI,CAAC,GAAGI,SAAS;;gBAElC;;YAEF,KAAK,QAAQ;cAAE;gBACb,MAAMN,EAAE,GAAGC,OAA4B;gBACvC,IAAI,EAACb,QAAQ,YAARA,QAAQ,CAAGY,EAAE,oBAAFA,EAAE,CAAEE,IAAI,CAAC,GAAE;kBACzBT,UAAU,CAACO,EAAE,oBAAFA,EAAE,CAAEE,IAAI,CAAC,GAAGI,SAAS;;gBAElC;;;SAKL,CAAC;;MAEJjB,WAAW,CAAEkB,EAAO,KAAM;QAAE,GAAGA,EAAE;QAAE,GAAGd;OAAY,CAAC,CAAC;KACrD;IAED,IAAIL,QAAQ,EAAE;MACZM,gBAAgB,EAAE;KACnB,MAAM;MACLU,gBAAgB,EAAE;;GAErB,EAAE,EAAE,CAAC;EAEN,OAAOd,GAAG;AACZ,CAAC;;ACtDD,SAASkB,QAAQA,CACfC,MAAS,EACTC,WAA4B;EAE5B,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG;IAC1B,IAAIC,MAAM,GAAkB,EAAE;IAC9B,IAAIJ,WAAW,EAAE;MACfK,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACX,OAAO,CAAES,QAAQ;QACxC,MAAMS,SAAS,GAAGT,QAAmB;QACrC,MAAML,KAAK,GAAGM,MAAM,CAACQ,SAAS,CAAC;QAC/B,MAAMC,kBAAkB,GAAGR,WAAW,CAACO,SAAS,CAAC;QACjD,IAAIC,kBAAkB,EAAE;UACtB,IAAIA,kBAAkB,YAAlBA,kBAAkB,CAAEC,QAAQ,IAAI,CAAChB,KAAK,EAAE;YAC1CY,MAAM,CAACK,MAAM,CAACN,MAAM,EAAE;cACpB,CAACG,SAAS,GAAG,CAAAC,kBAAkB,oBAAlBA,kBAAkB,CAAEG,OAAO,KAAI;aAC7C,CAAC;WACH,MAAM,IAAIH,kBAAkB,YAAlBA,kBAAkB,CAAEV,QAAQ,EAAE;YACvC,MAAMc,OAAO,GAAGJ,kBAAkB,CAACV,QAAQ,CAACC,MAAM,CAACQ,SAAS,CAAC,CAAC;YAC9D,IAAI,CAACK,OAAO,CAACC,WAAW,EAAE;cACxBR,MAAM,CAACK,MAAM,CAACN,MAAM,EAAE;gBACpB,CAACG,SAAS,GAAGK,OAAO,CAACD;eACtB,CAAC;;WAEL,MAAM;YACL,IAAIP,MAAM,CAACG,SAAS,CAAC,EAAE;cACrB,OAAOH,MAAM,CAACG,SAAS,CAAC;;;;OAI/B,CAAC;MACFF,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACU,MAAM,GAAG,CAAC,GAC1BX,GAAG,CAAC;QAAEY,MAAM,EAAE,KAAK;QAAEX;OAAQ,CAAC,GAC9BF,GAAG,CAAC;QAAEa,MAAM,EAAE,IAAI;QAAEX;OAAQ,CAAC;KAClC,MAAM;MACLF,GAAG,CAAC;QAAEa,MAAM,EAAE,IAAI;QAAEX;OAAQ,CAAC;;GAEhC,CAAC;AACJ;;ACXA,MAAMY,OAAO,GACXC,KAAuB;EAEvB,MAAM,CAACvC,QAAQ,EAAEC,WAAW,CAAC,GAAGuC,cAAQ,CAAK,CAAAD,KAAK,oBAALA,KAAK,CAAEE,YAAkB,KAAI,EAAE,CAAC;EAC7E,MAAM,CAACf,MAAM,EAAEgB,SAAS,CAAC,GAAGF,cAAQ,CAAgB,EAAE,CAAC;EACvD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGJ,cAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMtC,GAAG,GAAGH,WAAW,CAACwC,KAAK,oBAALA,KAAK,CAAEE,YAAY,EAAExC,WAAW,CAAC;EAEzD,MAAM4C,cAAc,GAAGA,CAACC,IAAO,EAAEC,IAAuB,KACtD3B,QAAQ,CAAI0B,IAAI,EAAEP,KAAK,oBAALA,KAAK,CAAEjB,WAAW,CAAC,CAClC0B,IAAI,CAAExB,GAAG;IACRkB,SAAS,CAAClB,GAAG,CAACE,MAAuB,CAAC;IACtC,IAAIqB,IAAI,EAAE;MACRA,IAAI,EAAE;;GAET,CAAC,CACDE,KAAK,CAAEC,CAAC;IACPR,SAAS,CAACQ,CAAC,CAACxB,MAAuB,CAAC;GACrC,CAAC;EAEN,MAAMyB,YAAY,GAChBD,CAAoD;IAEpDA,CAAC,CAACE,OAAO,EAAE;IACX,MAAM;MAAEtC,IAAI;MAAEC;KAAO,GAAGmC,CAAC,CAACG,MAAM;IAChC,MAAMC,OAAO,GAAG;MAAE,GAAGtD,QAAQ;MAAE,CAACc,IAAI,GAAGC;KAAO;IAC9C,IAAI4B,WAAW,EAAE;MACfE,cAAc,CAACS,OAAO,CAAC;;IAEzBrD,WAAW,CAACqD,OAAO,CAAC;GACrB;EAED,MAAMC,YAAY,GAChBC,QAA2B;IAE3B,OAAQN,CAAC;MACPA,CAAC,CAACO,cAAc,EAAE;MAClBb,cAAc,CAAC,IAAI,CAAC;MACpBC,cAAc,CAAC7C,QAAQ,EAAE;QACvBwD,QAAQ,CAACxD,QAAQ,CAAC;OACnB,CAAC;KACH;GACF;EAED,OAAO;IACLE,GAAG;IACHwB,MAAM;IACNyB,YAAY;IACZI;GACD;AACH,CAAC;;;;"}